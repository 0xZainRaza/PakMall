version: 2.1

executors:
  node-executor:
    docker:
      - image: node:18-alpine

  docker-executor:
    docker:
      - image: docker:latest

jobs:

  build:
    executor: node-executor
    steps:
      - checkout
      - run: npm install

  test:
    executor: node-executor
    steps:
      - checkout
      - run: npm install
      - run: npm test | tee test-results.txt
      - store_artifacts:
          path: test-results.txt  # Store test logs

  sonar_scan:
    executor: node-executor
    steps:
      - checkout
      - run:
          name: SonarQube Analysis
          command: |
            echo "Sonar Scanner"
            

  dependency_check:
    executor: node-executor
    steps:
      - checkout
      - run:
          name: Install Java and Dependency-Check
          command: |
            apk add --no-cache openjdk11 wget unzip
            export JAVA_HOME=/usr/lib/jvm/java-11-openjdk
            mkdir -p reports
            wget https://github.com/dependency-check/DependencyCheck/releases/download/v12.1.1/dependency-check-12.1.1-release.zip
            unzip dependency-check-12.1.1-release.zip -d dependency-check
            ./dependency-check/dependency-check/bin/dependency-check.sh --scan ./ --format HTML --out reports/dependency-report.html --nvdApiKey $NVD_API_KEY

      - store_artifacts:
          path: reports/dependency-report.html


  deploy:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build and Push Docker Image
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker build -t 0xzainraza/myapp:latest .
            docker push 0xzainraza/myapp:latest

  send_email_reports:
    executor: node-executor
    steps:
      - checkout
      - run:
          name: Send Reports via Email
          command: |
          apk add --no-cache msmtp
          echo "Subject: CircleCI Reports
          Please find the attached SonarQube, Dependency-Check, and Test reports." | \
          msmtp --host=smtp.gmail.com --port=587 --auth=on \
                --user=$EMAIL_USER --passwordeval "echo $EMAIL_PASS" \
                -t K214755@gmail.com \
                -a "reports/dependency-report.html" \
                -a "test-results.txt"


workflows:
  ci_pipeline:
    jobs:
      - build
      - test:
          requires:
            - build
      - sonar_scan:
          requires:
            - test
      - dependency_check:
          requires:
            - test
      - deploy:
          requires:
            - sonar_scan
            - dependency_check
      - send_email_reports:
          requires:
            - deploy
